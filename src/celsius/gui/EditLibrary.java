/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DialogEditLibrary.java
 *
 * Created on 18.02.2010, 22:23:30
 */

package celsius.gui;

import celsius.data.KeyValueTableModel;
import celsius.data.Library;
import celsius.Resources;
import celsius.tools.Parser;
import celsius.tools.TextFile;
import celsius.tools.ToolBox;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author cnsaeman
 */
public class EditLibrary extends javax.swing.JDialog {

    private final Library library;
    private final MainFrame MF;
    private final Resources RSC;
    private final KeyValueTableModel KVTM;

    /** Creates new form DialogEditLibrary */
    public EditLibrary(MainFrame mf, Library lib) {
        super(mf, true);
        MF=mf;
        RSC=MF.RSC;
        library=lib;
        initComponents();
        KVTM=new KeyValueTableModel("Property","Value");
        for (String t : RSC.LibraryFields) {
            KVTM.addRow(Parser.lowerEndOfWords(t), library.config.get(t));
        }
        jTMain.setModel(KVTM);
        jTMain.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTMain.getColumnModel().getColumn(0).setMaxWidth(150);

        GUIToolBox.centerDialog(this,mf);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBtnDone = new javax.swing.JButton();
        jBtnEditCSS = new javax.swing.JButton();
        ApplyName = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMain = new javax.swing.JTable();
        jBtnManagePlugins = new javax.swing.JButton();
        jCBHTMLtemplate = new javax.swing.JComboBox();
        jBtnEditHTMLtemplate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Library Properties");

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        jBtnDone.setText("Done");
        jBtnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDoneActionPerformed(evt);
            }
        });

        jBtnEditCSS.setText("Edit HTML Stylesheet");
        jBtnEditCSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditCSSActionPerformed(evt);
            }
        });

        ApplyName.setText("Apply");
        ApplyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyNameActionPerformed(evt);
            }
        });

        jTMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(jTMain);

        jBtnManagePlugins.setText("Manage Plugins");
        jBtnManagePlugins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnManagePluginsActionPerformed(evt);
            }
        });

        jCBHTMLtemplate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Document", "Person", "Category", "Multiple Documents", "Identifier search", "General search", "Keyword search", "Links tab", "Just added" }));

        jBtnEditHTMLtemplate.setText("Edit HTML template");
        jBtnEditHTMLtemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditHTMLtemplateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(421, 421, 421)
                .addComponent(ApplyName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnDone))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jBtnManagePlugins)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBHTMLtemplate, 0, 125, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEditHTMLtemplate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEditCSS))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnEditCSS)
                    .addComponent(jCBHTMLtemplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEditHTMLtemplate)
                    .addComponent(jBtnManagePlugins))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnDone)
                    .addComponent(ApplyName)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ApplyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyNameActionPerformed
        boolean done;
        boolean changed=false;
        for (int i=0; i<RSC.LibraryFields.length;i++) {
            String value=(String)KVTM.getValueAt(i,1);
            if ((value!=null) && !value.equals(library.config.get(RSC.LibraryFields[i]))) {
                done=false;
                if (RSC.LibraryFields[i].equals("name")) {
                    library.name = value;
                    library.putConfig("name", library.name);
                    DefaultComboBoxModel DCBM = (DefaultComboBoxModel) MF.jCBLibraries.getModel();
                    int ind = MF.RSC.currentLib;
                    DCBM.removeElementAt(ind);
                    DCBM.insertElementAt(library.name, ind);
                    MF.switchToLibrary(library);
                    MF.jMCopyToDiff.getItem(i).setText(library.name);
                    MF.jMCopyToDiff1.getItem(i).setText(library.name);
                    RSC.MF.updateStatusBar(false);
                    done=true;
                    changed=true;
                }
                if (RSC.LibraryFields[i].equals("index")) {
                    RSC.showWarning("Changing the fields in the library's main index requires a large amount of rewriting of the index files.\nThis operation is currently not possible", "Not possible");
                    KVTM.setValueAt(library.config.get(RSC.LibraryFields[i]),i,1);
                    done=true;
                }
                if (!done) {
                    if (RSC.LibraryFields[i].startsWith("column")) {
                        if (Parser.howOftenContains(value, "|")==Parser.howOftenContains(library.config.get("column-fields"), "|")) {
                            library.putConfig(RSC.LibraryFields[i], value);
                            changed=true;
                        } else {
                            RSC.showWarning("The number of elements in the list \""+RSC.LibraryFields[i]+"\" does not match that of the table columns.", "Not possible:");
                            KVTM.setValueAt(library.config.get(RSC.LibraryFields[i]),i,1);
                        }
                    } else {
                        library.putConfig(RSC.LibraryFields[i], value);
                        changed=true;
                    }
                }
            }
        }
        if (changed) {
            library.hideFunctionality=new ArrayList<String>(Arrays.asList(library.configToArray("hide")));
            library.getFieldsFromConfig();
        }
    }//GEN-LAST:event_ApplyNameActionPerformed

    private void jBtnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDoneActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jBtnDoneActionPerformed

    private void jBtnEditCSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditCSSActionPerformed
        String css="";
        for (String r : library.styleSheetRules)
            css+="\n"+r;
        if (css.length()>0) css=css.substring(1);
        MultiLineEditor MLE=new MultiLineEditor(MF.RSC,"Edit HTML Stylesheet",css);
        MLE.setVisible(true);
        if (!MLE.cancel) {
            if (library.config.get("style")==null) {
                library.putConfig("style","LD::style.css");
            } else {
                if (!(new File(library.completeDir(library.config.get("style"),""))).exists())
                    library.putConfig("style","LD::style.css");
            }
            try {
                TextFile TF=new TextFile(library.completeDir(library.config.get("style"),""),false);
                TF.putString(MLE.text);
                TF.close();
                library.loadStyleSheetRules();
            } catch (IOException e) {
                RSC.outEx(e);
                RSC.showWarning("Error writing style file: "+e.toString(),"Warning:");
            }
        }

    }//GEN-LAST:event_jBtnEditCSSActionPerformed

    private void jBtnManagePluginsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnManagePluginsActionPerformed
        (new EditLibraryPlugins(MF,RSC.getCurrentlySelectedLibrary())).setVisible(true);
        KVTM.clear();
        for (String t : RSC.LibraryFields) {
            KVTM.addRow(Parser.lowerEndOfWords(t), library.config.get(t));
        }
        jTMain.setModel(KVTM);
    }//GEN-LAST:event_jBtnManagePluginsActionPerformed

    private void jBtnEditHTMLtemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditHTMLtemplateActionPerformed
        int iM=jCBHTMLtemplate.getSelectedIndex();
        String template=library.getHTMLTemplate(iM).templateString;
        MultiLineEditor MLE=new MultiLineEditor(RSC,"Edit HTML template for "+jCBHTMLtemplate.getSelectedItem(),template);
        MLE.setVisible(true);
        if ((!MLE.cancel) && (iM!=0)) {
            library.setHTMLTemplate(iM, MLE.text);
        } else {
            if (!MLE.cancel) RSC.showWarning("The default template cannot be modified.", "No changes applied");
        }
}//GEN-LAST:event_jBtnEditHTMLtemplateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApplyName;
    private javax.swing.JButton jBtnDone;
    private javax.swing.JButton jBtnEditCSS;
    private javax.swing.JButton jBtnEditHTMLtemplate;
    private javax.swing.JButton jBtnManagePlugins;
    private javax.swing.JComboBox jCBHTMLtemplate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMain;
    // End of variables declaration//GEN-END:variables

}
