//
// Celsius Library System v2
// (w) by C. Saemann
//
// DialogConfiguration.java
//
// This class combines all necessary data for a library
//
// typesafe
// 
// checked 15.09.2007
//

package celsius.gui;

import atlantis.tools.ExecutionShell;
import atlantis.tools.FileTools;
import atlantis.tools.TextFile;
import celsius.components.plugins.Plugins;
import celsius.components.plugins.Plugin;
import celsius.images.Icons;
import celsius.Resources;
import atlantis.tools.Parser;
import celsius.*;
import celsius.tools.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

/**
 *
 * @author  cnsaeman
 */
public class EditConfiguration extends javax.swing.JDialog {
    
    private MainFrame MF;
    private final Resources RSC;
    private Configurator configuration;
    private String filename;

    private DefaultListModel LM1,LM2,LM3;
    private Plugins Plugins;

    private String type,name;

    
    /** Creates new form DialogConfiguration */
    public EditConfiguration(MainFrame parent, Configurator cfg) {
        super(parent, true);
        RSC=parent.RSC;
        MF=parent;
        configuration=cfg;
        
        initComponents();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                close();
            }
        });
        jTabbedPane1.setTabComponentAt(0, new TabLabel("General Configuration",Resources.pluginSetupIcon,RSC,null,false));
        jTabbedPane1.setTabComponentAt(1, new TabLabel("File support","default",RSC,null,false));
        setIconImage(RSC.celsiusIcon);
        jLFileTypes.setModel(configuration.getTypeDLM());
        jLFileTypes.setSelectedIndex(0);
        jTFIconFolder.setText(RSC.configuration.getConfigurationProperty("iconfolder"));
        jCBIcons.setModel(RSC.icons.getDCBM());
        if (RSC.getCurrentlySelectedLibrary()!=null)
            jCBIcons.setRenderer(new CBRenderer(RSC.icons,RSC.getCurrentlySelectedLibrary().iconDictionary,RSC));
        else
            jCBIcons.setRenderer(new CBRenderer(RSC.icons,null,RSC));
        DefaultComboBoxModel DCBM=new DefaultComboBoxModel();
        try {
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                DCBM.addElement(info.getName());
            }
        } catch (Exception e) {
            RSC.outEx(e);
        }
        jTFEmail.setText(configuration.getConfigurationProperty("email"));
        jTFAnnotate.setText(configuration.getConfigurationProperty("annotate"));
        jTFproxyaddress.setText(configuration.getConfigurationProperty("proxy-address"));
        jTFproxyaddress.setEnabled(configuration.getConfigurationProperty("proxy").equals("true"));
        jTFproxyport.setText(configuration.getConfigurationProperty("proxy-port"));
        jTFproxyport.setEnabled(configuration.getConfigurationProperty("proxy").equals("true"));
        jCBproxy.setSelected(configuration.getConfigurationProperty("proxy").equals("true"));
    }

    private void addPlugin(DefaultListModel LM, String type) {
        JFileChooser FC = new JFileChooser();
        FC.setDialogTitle("Please choose a plugin file");
        FC.setCurrentDirectory(new File("plugins"));
        FC.setDialogType(JFileChooser.OPEN_DIALOG);
        FC.setFileFilter(new FFilter("class", "Plugins"));
        RSC.adjustComponents(FC.getComponents());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFEmail = new javax.swing.JTextField();
        jBtnTest1 = new javax.swing.JButton();
        jCBproxy = new javax.swing.JCheckBox();
        jTFproxyaddress = new javax.swing.JTextField();
        jTFproxyport = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTFAnnotate = new javax.swing.JTextField();
        jBtnTest4 = new javax.swing.JButton();
        jBtnEdShort = new javax.swing.JButton();
        jBtnEdJournal = new javax.swing.JButton();
        jBtnReloadIcons = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jCBIcons = new javax.swing.JComboBox();
        jTFIconFolder = new javax.swing.JTextField();
        jBtnChooseIconFolder = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jBtnApply1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLFileTypes = new javax.swing.JList();
        jBtnAdd = new javax.swing.JButton();
        jBtnRemove = new javax.swing.JButton();
        jBtnApply = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTFExtract = new javax.swing.JTextField();
        jBtnTest2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTFView = new javax.swing.JTextField();
        jBtnTest3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTFIdent = new javax.swing.JTextField();
        jBtnSystem = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTFSecondary = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuration");
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(0, 140));

        jLabel1.setText("Starting email client and attach:");

        jBtnTest1.setText("Test");
        jBtnTest1.setPreferredSize(new java.awt.Dimension(65, 20));
        jBtnTest1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTest1ActionPerformed(evt);
            }
        });

        jCBproxy.setText("Use the following proxy:");
        jCBproxy.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCBproxy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBproxyActionPerformed(evt);
            }
        });

        jTFproxyaddress.setEnabled(false);

        jTFproxyport.setEnabled(false);

        jLabel5.setText("Port:");

        jLabel6.setText("Command for annotating pdf:");

        jBtnTest4.setText("Test");
        jBtnTest4.setPreferredSize(new java.awt.Dimension(65, 20));
        jBtnTest4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTest4ActionPerformed(evt);
            }
        });

        jBtnEdShort.setText("Edit ShortCuts");
        jBtnEdShort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEdShortActionPerformed(evt);
            }
        });

        jBtnEdJournal.setText("Edit Journallinks");
        jBtnEdJournal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEdJournalActionPerformed(evt);
            }
        });

        jBtnReloadIcons.setText("Reload Icons");
        jBtnReloadIcons.setPreferredSize(new java.awt.Dimension(124, 20));
        jBtnReloadIcons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReloadIconsActionPerformed(evt);
            }
        });

        jLabel11.setText("Folder for icons:");

        jCBIcons.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTFIconFolder.setEditable(false);

        jBtnChooseIconFolder.setText("Choose");
        jBtnChooseIconFolder.setPreferredSize(new java.awt.Dimension(124, 20));
        jBtnChooseIconFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnChooseIconFolderActionPerformed(evt);
            }
        });

        jLabel12.setText("Available icons:");

        jBtnApply1.setText("Apply Changes");
        jBtnApply1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnApply1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCBproxy, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTFEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnTest1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTFproxyaddress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5))
                                    .addComponent(jTFAnnotate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTFproxyport)
                                    .addComponent(jBtnTest4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBIcons, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jBtnEdShort)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtnEdJournal)
                                        .addGap(266, 266, 266))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFIconFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(jBtnChooseIconFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnReloadIcons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnApply1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnTest1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBproxy)
                    .addComponent(jTFproxyport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTFproxyaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTFAnnotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnTest4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnEdShort)
                    .addComponent(jBtnEdJournal))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTFIconFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnChooseIconFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnReloadIcons, javax.swing.GroupLayout.PREFERRED_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jCBIcons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnApply1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, Short.MAX_VALUE)
                .addGap(89, 89, 89))
        );

        jTabbedPane1.addTab("General Configuration", jPanel1);

        jLFileTypes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLFileTypes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jLFileTypesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jLFileTypes);

        jBtnAdd.setText("Add Type");
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        jBtnRemove.setText("Remove Type");
        jBtnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRemoveActionPerformed(evt);
            }
        });

        jBtnApply.setText("Apply Changes");
        jBtnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnApplyActionPerformed(evt);
            }
        });

        jLabel2.setText("Extract text:");

        jBtnTest2.setText("Test");
        jBtnTest2.setPreferredSize(new java.awt.Dimension(65, 20));
        jBtnTest2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTest2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Viewer:");

        jBtnTest3.setText("Test");
        jBtnTest3.setPreferredSize(new java.awt.Dimension(65, 20));
        jBtnTest3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTest3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Identifier:");

        jBtnSystem.setText("Standard");
        jBtnSystem.setPreferredSize(new java.awt.Dimension(65, 20));
        jBtnSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSystemActionPerformed(evt);
            }
        });

        jLabel14.setText("Secondary viewers: (example: \"Amarok:amarok %from%|VLC:vlc %from%\")");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFIdent, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTFView, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnSystem, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTFExtract, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBtnTest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnTest3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTFSecondary, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jBtnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnApply))
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTFExtract, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addComponent(jBtnTest2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnTest3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnSystem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTFView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFIdent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFSecondary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnAdd)
                            .addComponent(jBtnRemove)
                            .addComponent(jBtnApply)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("File Support", jPanel2);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        jButton4.setText("Close");
        jButton4.setPreferredSize(new java.awt.Dimension(34, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(826, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        close();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jBtnSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSystemActionPerformed
        jTFView.setText("use standard viewer");
    }//GEN-LAST:event_jBtnSystemActionPerformed

    private void jBtnTest3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTest3ActionPerformed
        if (jLFileTypes.getSelectedIndex()==-1) return;
        String filetype=(String)jLFileTypes.getSelectedValue();
        JFileChooser FC=new JFileChooser();
        FC.setDialogTitle("Select a document to view");
        FC.setFileFilter(new FFilter(filetype,filetype+"-files"));
        RSC.adjustComponents(FC.getComponents());
        int returnVal = FC.showOpenDialog(this);
        // Starte viewer, falls nicht gecancelt wurde
        if (!(returnVal==JFileChooser.CANCEL_OPTION)) {
            String location=FC.getCurrentDirectory()+"/"+FC.getSelectedFile().getName();
            try {
                String cmdln=jTFView.getText();
                cmdln=cmdln.replace("%from%",(new File(location)).getCanonicalPath());
                ExecutionShell ES=new ExecutionShell(cmdln,0,true);
                ES.start();
            } catch (IOException e) { RSC.outEx(e); }
        }
    }//GEN-LAST:event_jBtnTest3ActionPerformed

    private void jBtnTest2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTest2ActionPerformed
        if (jLFileTypes.getSelectedIndex()==-1) return;
        String filetype=(String)jLFileTypes.getSelectedValue();
        JFileChooser FC=new JFileChooser();
        FC.setDialogTitle("Select a document to extract text from");
        FC.setFileFilter(new FFilter(filetype,filetype+"-files"));
        RSC.adjustComponents(FC.getComponents());
        int returnVal = FC.showOpenDialog(this);
        // Starte Textextrahierer, falls nicht gecancelt wurde
        if (!(returnVal==JFileChooser.CANCEL_OPTION)) {
            try {
                boolean gzipped=false;
                String location=FC.getCurrentDirectory()+"/"+FC.getSelectedFile().getName();
                if (location.endsWith(".gz")) {
                    TextFile.GUnZip(location);
                    location=location.substring(0,location.length()-3);
                    gzipped=true;
                }
                String cmdln=jTFExtract.getText();
                cmdln=cmdln.replace("%from%",location);
                cmdln=cmdln.replace("%to%",location+".ttxxtt");
                RSC.out("Testing command: "+cmdln);
                ExecutionShell ES=new ExecutionShell(cmdln,0,false);
                ES.start();
                ES.join();
                if (gzipped)
                TextFile.GZip(location);
                // Gebe die Meldungen des Extraktors aus
                RSC.showInformation(ES.output+"\n"+ES.errorMsg,"Messages of extractor");
                // Gebe die ersten 60 Zeichen aus.
                TextFile f1=new TextFile(location+".ttxxtt");
                String output="";
                while (f1.ready() && (output.length()<300) && (output.indexOf(ToolBox.EOP)==-1)) {
                    output+="\n"+f1.getString().trim();
                }
                f1.close();
                if (output.length()>60) output=output.substring(0,60);
                RSC.showInformation(output,"Results of extraction, first 60 characters");
                FileTools.deleteIfExists(location+".ttxxtt");
            } catch (Exception e) {
                RSC.outEx(e);
                RSC.showWarning("Error Msg:"+e.toString(),"Error encountered!");
            }
        }
    }//GEN-LAST:event_jBtnTest2ActionPerformed

    private void jBtnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnApplyActionPerformed
        if (jLFileTypes.getSelectedIndex()==-1) return;
        String ft=(String)jLFileTypes.getSelectedValue();
        configuration.setSupportedFileTypeProperties(ft, jTFExtract.getText(),jTFView.getText(),jTFIdent.getText(),jTFSecondary.getText());
    }//GEN-LAST:event_jBtnApplyActionPerformed

    private void jBtnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRemoveActionPerformed
        if (jLFileTypes.getSelectedIndex()==-1) return;
        String ft=(String)jLFileTypes.getSelectedValue();
        configuration.removeFileType(ft);
        ((DefaultListModel)jLFileTypes.getModel()).removeElementAt(jLFileTypes.getSelectedIndex());
        jLFileTypes.setSelectedIndex(0);
    }//GEN-LAST:event_jBtnRemoveActionPerformed

    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        SingleLineEditor DSLE=new SingleLineEditor(RSC,"Please enter a new filetype","filetype, e.g. pdf",false);
        DSLE.setVisible(true);
        if (!DSLE.cancel) {
            configuration.addFileType(DSLE.text);
            ((DefaultListModel)jLFileTypes.getModel()).addElement(DSLE.text);
            jTFView.setText("use standard viewer");
        }
        DSLE.dispose();
    }//GEN-LAST:event_jBtnAddActionPerformed

    private void jLFileTypesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jLFileTypesValueChanged
        if (jLFileTypes.getSelectedIndex()==-1) return;
        if (evt.getValueIsAdjusting()) return;
        String ft=(String)jLFileTypes.getSelectedValue();
        jTFView.setText(configuration.getSupportedFileTypeProperty(ft,"viewer"));
        jTFExtract.setText(configuration.getSupportedFileTypeProperty(ft,"extractor"));
        jTFIdent.setText(configuration.getSupportedFileTypeProperty(ft,"ident"));
        jTFSecondary.setText(configuration.getSupportedFileTypeProperty(ft,"secondary_viewers"));
    }//GEN-LAST:event_jLFileTypesValueChanged

    private void jBtnApply1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnApply1ActionPerformed
        configuration.setConfigurationProperties(jTFEmail.getText(),jTFAnnotate.getText(),jTFproxyaddress.getText(),jTFproxyport.getText(),jCBproxy.isSelected());
        jTFEmail.setText(configuration.getConfigurationProperty("email"));
        jTFAnnotate.setText(configuration.getConfigurationProperty("annotate"));
    }//GEN-LAST:event_jBtnApply1ActionPerformed

    private void jBtnChooseIconFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnChooseIconFolderActionPerformed
        JFileChooser FC = new JFileChooser();
        FC.setDialogTitle("Please choose an icon folder");
        FC.setCurrentDirectory(new File("."));
        FC.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        FC.setDialogType(JFileChooser.OPEN_DIALOG);
        FC.setFileFilter(new FFilter("_DIR", "Folders"));
        RSC.adjustComponents(FC.getComponents());
        if (!(FC.showOpenDialog(this) == JFileChooser.CANCEL_OPTION)) {
            this.jTFIconFolder.setText(FC.getSelectedFile().getAbsolutePath());
            configuration.setConfigurationProperty("iconfolder",FC.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jBtnChooseIconFolderActionPerformed

    private void jBtnReloadIconsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReloadIconsActionPerformed
        RSC.icons=new Icons(configuration.getConfigurationProperty("iconfolder"));
        jCBIcons.setModel(RSC.icons.getDCBM());
        jCBIcons.setRenderer(new CBRenderer(RSC.icons,RSC.getCurrentlySelectedLibrary().iconDictionary,RSC));
    }//GEN-LAST:event_jBtnReloadIconsActionPerformed

    private void jBtnEdJournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEdJournalActionPerformed
        try {
            TextFile SC = new TextFile("celsius.journallinks");
            String tmp = "";
            while (SC.ready()) {
                tmp += "\n" + SC.getString();
            }
            SC.close();
            tmp = tmp.substring(1);
            MultiLineEditor DMLE = new MultiLineEditor(RSC, "Edit Journallinks", tmp);
            DMLE.setVisible(true);
            if (!DMLE.cancel) {
                SC = new TextFile("celsius.journallinks", false);
                SC.putString(DMLE.text);
                SC.close();
                RSC.loadShortCuts();
            }
        } catch (IOException ex) {
            RSC.outEx(ex);
        }
    }//GEN-LAST:event_jBtnEdJournalActionPerformed

    private void jBtnEdShortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEdShortActionPerformed
        try {
            TextFile SC = new TextFile("celsius.shortcuts");
            String tmp = "";
            while (SC.ready()) {
                tmp += "\n" + SC.getString();
            }
            SC.close();
            tmp = tmp.substring(1);
            MultiLineEditor DMLE = new MultiLineEditor(RSC, "Edit Shortcuts", tmp);
            DMLE.setVisible(true);
            if (!DMLE.cancel) {
                SC = new TextFile("celsius.shortcuts", false);
                SC.putString(DMLE.text);
                SC.close();
                RSC.loadShortCuts();
                MF.setShortCuts();
            }
        } catch (IOException ex) {
            RSC.outEx(ex);
        }
    }//GEN-LAST:event_jBtnEdShortActionPerformed

    private void jBtnTest4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTest4ActionPerformed
        if (jLFileTypes.getSelectedIndex()==-1) return;
        String filetype=(String)jLFileTypes.getSelectedValue();
        JFileChooser FC=new JFileChooser();
        FC.setDialogTitle("Select a pdf-file to annotate");
        FC.setFileFilter(new FFilter("pdf","pdf-files"));
        RSC.adjustComponents(FC.getComponents());
        int returnVal = FC.showOpenDialog(this);
        // Starte viewer, falls nicht gecancelt wurde
        if (!(returnVal==JFileChooser.CANCEL_OPTION)) {
            String location=FC.getCurrentDirectory()+"/"+FC.getSelectedFile().getName();
            try {
                String cmdln=jTFAnnotate.getText();
                cmdln=cmdln.replace("%from%",(new File(location)).getCanonicalPath());
                ExecutionShell ES=new ExecutionShell(cmdln,0,true);
                ES.start();
            } catch (IOException e) { RSC.outEx(e); }
        }
    }//GEN-LAST:event_jBtnTest4ActionPerformed

    private void jCBproxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBproxyActionPerformed
        RSC.showInformation("Note that Celsius has to be restarted for the\nproxy settings to be changed.","Warning");
        jTFproxyaddress.setEnabled(jCBproxy.isSelected());
        jTFproxyport.setEnabled(jCBproxy.isSelected());
    }//GEN-LAST:event_jCBproxyActionPerformed

    private void jBtnTest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTest1ActionPerformed
        if (jLFileTypes.getSelectedIndex()==-1) return;
        String filetype=(String)jLFileTypes.getSelectedValue();
        JFileChooser FC=new JFileChooser();
        FC.setDialogTitle("Select a document to add");
        FC.setFileFilter(new FFilter("","All files"));
        RSC.adjustComponents(FC.getComponents());
        int returnVal = FC.showOpenDialog(this);
        // Starte viewer, falls nicht gecancelt wurde
        if (!(returnVal==JFileChooser.CANCEL_OPTION)) {
            String location=FC.getCurrentDirectory()+"/"+FC.getSelectedFile().getName();
            try {
                String cmdln=jTFEmail.getText();
                cmdln=cmdln.replace("%from%",(new File(location)).getCanonicalPath());
                RSC.out("Testing command: "+cmdln);
                ExecutionShell ES=new ExecutionShell(cmdln,0,true);
                ES.start();
            } catch (IOException e) { RSC.outEx(e); }
        }

    }//GEN-LAST:event_jBtnTest1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnApply;
    private javax.swing.JButton jBtnApply1;
    private javax.swing.JButton jBtnChooseIconFolder;
    private javax.swing.JButton jBtnEdJournal;
    private javax.swing.JButton jBtnEdShort;
    private javax.swing.JButton jBtnReloadIcons;
    private javax.swing.JButton jBtnRemove;
    private javax.swing.JButton jBtnSystem;
    private javax.swing.JButton jBtnTest1;
    private javax.swing.JButton jBtnTest2;
    private javax.swing.JButton jBtnTest3;
    private javax.swing.JButton jBtnTest4;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jCBIcons;
    private javax.swing.JCheckBox jCBproxy;
    private javax.swing.JList jLFileTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFAnnotate;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFExtract;
    private javax.swing.JTextField jTFIconFolder;
    private javax.swing.JTextField jTFIdent;
    private javax.swing.JTextField jTFSecondary;
    private javax.swing.JTextField jTFView;
    private javax.swing.JTextField jTFproxyaddress;
    private javax.swing.JTextField jTFproxyport;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    public void showTab(int i) {
        setVisible(true);
        jTabbedPane1.setSelectedIndex(1);
    }
    
    public void open() {
        try {
            configuration.openConnection();
        } catch (Exception ex) {
            RSC.outEx(ex);
        }
        GUIToolBox.centerDialog(this,RSC.MF);
        this.setVisible(true);
    }

    public void close() {
        try {
            configuration.closeConnection();
        } catch (Exception ex) {
            RSC.outEx(ex);
        }
        setVisible(false);
    }
    
}
